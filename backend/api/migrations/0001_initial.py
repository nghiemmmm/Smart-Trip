# Generated by Django 5.2.4 on 2025-08-11 04:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('trip_type', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Trips',
            },
        ),
        migrations.CreateModel(
            name='TravelExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('date', models.DateField()),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='api.trip')),
            ],
            options={
                'db_table': 'TravelExpenses',
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tag', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('itinerary_day', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurants', to='api.trip')),
            ],
            options={
                'db_table': 'Restaurants',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tag', models.CharField(blank=True, max_length=50, null=True)),
                ('itinerary_day', models.IntegerField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='api.trip')),
            ],
            options={
                'db_table': 'Places',
            },
        ),
        migrations.CreateModel(
            name='PackingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('checked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='packing_list', to='api.trip')),
            ],
            options={
                'db_table': 'PackingList',
            },
        ),
        migrations.CreateModel(
            name='Outfit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField()),
                ('outfit_name', models.CharField(max_length=100)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outfits', to='api.trip')),
            ],
            options={
                'db_table': 'Outfits',
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to='api.trip')),
            ],
            options={
                'db_table': 'JournalEntries',
            },
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_number', models.IntegerField()),
                ('activity', models.TextField()),
                ('time', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraries', to='api.trip')),
            ],
            options={
                'db_table': 'Itinerary',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.TextField(blank=True, null=True)),
                ('activity_time', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='api.trip')),
            ],
            options={
                'db_table': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tag', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accommodations', to='api.trip')),
            ],
            options={
                'db_table': 'Accommodations',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='users_usernam_baeb4b_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['user'], name='Trips_user_id_480d5d_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['start_date'], name='Trips_start_d_bd5d98_idx'),
        ),
        migrations.AddIndex(
            model_name='travelexpense',
            index=models.Index(fields=['trip'], name='TravelExpen_trip_id_3b129b_idx'),
        ),
        migrations.AddIndex(
            model_name='travelexpense',
            index=models.Index(fields=['date'], name='TravelExpen_date_07c20c_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['trip'], name='Restaurants_trip_id_c24682_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['itinerary_day'], name='Restaurants_itinera_e39fe9_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['trip'], name='Places_trip_id_e69c30_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['itinerary_day'], name='Places_itinera_6af892_idx'),
        ),
        migrations.AddIndex(
            model_name='packinglist',
            index=models.Index(fields=['trip'], name='PackingList_trip_id_5abf99_idx'),
        ),
        migrations.AddIndex(
            model_name='outfit',
            index=models.Index(fields=['trip'], name='Outfits_trip_id_fc598f_idx'),
        ),
        migrations.AddIndex(
            model_name='outfit',
            index=models.Index(fields=['day'], name='Outfits_day_729deb_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['trip'], name='JournalEntr_trip_id_93cb21_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['date'], name='JournalEntr_date_336c37_idx'),
        ),
        migrations.AddIndex(
            model_name='itinerary',
            index=models.Index(fields=['trip'], name='Itinerary_trip_id_bdd8c0_idx'),
        ),
        migrations.AddIndex(
            model_name='itinerary',
            index=models.Index(fields=['day_number'], name='Itinerary_day_num_485468_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['trip'], name='Activities_trip_id_6d7e73_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['activity_time'], name='Activities_activit_044318_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodation',
            index=models.Index(fields=['trip'], name='Accommodati_trip_id_320faa_idx'),
        ),
        migrations.AddIndex(
            model_name='accommodation',
            index=models.Index(fields=['date'], name='Accommodati_date_c65042_idx'),
        ),
    ]
